∇ net ← circle
    ;n ;data ;split
    ;rs ;thetas ;xs ;ys
    ;ins ;outs ;trins ;trouts ;in ;out
    ;PP
    ;layer1 ;layer2
    ⍝ Example usage of the ANNAPL code.
    ⍝ Randomly sample points in circle with radius 1.5.
    ⍝ Feed the network the (x, y) coordinates and teach it
    ⍝  to recognise points inside the unit circle.

    n ← 1000 ⍝ data points
    thetas ← ○2×?n⍴0
    rs ← 1.5×?n⍴0
    xs ← rs×1○thetas
    ys ← rs×2○thetas
    ins ← ↓xs,⍥⍪ys
    outs ← rs<1

    split ← 0.1 ⍝ Percentage to use for test.
    trins  ←  ins↑⍨-⌊n×1-split
    trouts ← outs↑⍨-⌊n×1-split

    layer1 ← #.Layer.Init 2 4
    layer1.ActivationFn ← ⎕NS ##.ActivationFns.LeakyReLU
    layer2 ← #.Layer.Init 4 1
    layer2.ActivationFn ← ⎕NS ##.ActivationFns.Sigmoid

    net ← ⎕NS ##.ANN
    net.lr ← 0.03
    net.layers ← layer1 layer2
    net.LossFn ← ⎕NS ##.LossFns.MSELoss

    PP ← { ⍝ Print the Performance of the network.
        ins ← ins↑⍨-⌊0.1×n
        outs ← outs↑⍨-⌊0.1×n
        nouts ← ⊃∘⌽∘net.Feed∘⍪¨ ins
        ⎕← 'Loss is ', (⊢⌹=⍨) outs net.LossFn.Loss¨ nouts
        ⍞← 'Accuracy is '
        ⍞← 2⍕100×(≢ins)÷⍨⊃+/outs=⌊0.5+nouts
        ⍞← '%'
    }

    PP net

    :For _ :In ⍳300
        ⍝ Train the network on all training data.
        _ ← trouts net.Train∘⍪¨ trins
    :EndFor

    PP net
∇
