∇ {net} ← Circle _
    ;n ;data ;split
    ;rs ;thetas ;xs ;ys
    ;ins ;outs ;trins ;trouts ;in ;out
    ;PP
    ;layer1 ;layer2
    ⍝ Example usage of the ANNAPL code.
    ⍝ Randomly sample points in circle with radius 1.5.
    ⍝ Feed the network the (x, y) coordinates and teach it
    ⍝  to recognise points inside the unit circle.

    ⎕CS ##  ⍝ To avoid typing ## all over the place.

    n ← 10000 ⍝ data points
    thetas ← ○2×?n⍴0
    rs ← 1.5×?n⍴0
    xs ← rs×1○thetas
    ys ← rs×2○thetas
    ins ← xs,⍥⍪ys
    outs ← rs<1

    split ← 0.1 ⍝ Percentage to use for test.
    trins  ←  ins↑⍨-⌊n×1-split
    trouts ← outs↑⍨-⌊n×1-split

    l1 ← ActivationFns.LeakyReLU Layer 2 4
    l2 ← ActivationFns.Sigmoid Layer 4 1

    net ← l1 l2 Net LossFns.MSELoss 0.03

    PP ← { ⍝ Print the Performance of the network.
        ins ← ins↑⍨-⌊0.1×n
        outs ← outs↑⍨-⌊0.1×n
        nouts ← ∊{⊃⌽net _FeedForward⍵}⍥⍪⍤1⊢ins
        ⍞← 'accuracy is '
        ⍞← 2⍕100×(⊢⌹=⍨)outs=⌊0.5+∊nouts
        ⍞← '%',⎕UCS 10
    }

    ⍞← 'initial ' ⋄ PP net
    trouts (net _Train)⍥⍪⍤0 1⊢trins
    ⍞← 'after training ' ⋄ PP net
∇
