∇ net ← MNIST
    ;ReadChunk ;SplitData ;dir ;ft
    ;layers ;data ;targets ;targetOuts ;inputs ;outs
    ⍝ Train a neural network on the MNIST data set.

    dir ← 'C:\Users\rodri\Documents\Programming\ANNAPL\examples\mnistdata\'
    ⍝ Create the network with the correct structure.
    layers ←, ##.ActivationFns.LeakyReLU ##.Layer 784 16
    layers ,← ##.ActivationFns.LeakyReLU ##.Layer 16 16
    layers ,← ##.ActivationFns.LeakyReLU ##.Layer 16 10
    net ← layers ##.Net ##.LossFns.MSELoss 0.001

    ReadChunk ← {⎕CSV⍠'Records' 1000⊢⍵'' 2}   ⍝ Read all-numeric records.
    SplitData ← {(⊣/⍵)(0 1↓⍵)}      ⍝ First col is image label,
                                    ⍝ remainder are the image pixels.

    ft ← 0 ⎕NTIE⍨dir,'mnist_train.csv'
    :While 0<≢data ← ReadChunk ft
        ⍞← '∙'
        (targets inputs) ← SplitData data
        targetOuts ← targets∘.=⍳10  ⍝ Compute target output vectors.
        targetOuts(net ##._Train)⍥⍪⍤1⊢inputs
    :EndWhile
    ⎕NUNTIE ft

    ⍝ Test the network to check final accuracy.
    ft ← 0 ⎕NTIE⍨dir,'mnist_test.csv'
    outs ← ⍬
    :While 0<≢data ← ReadChunk ft
        (targets inputs) ← SplitData data
        outs ,← targets={⊃⍒⊃⌽net ##._FeedForward ⍵}⍥⍪⍤1⊢inputs
    :EndWhile
    ⎕NUNTIE ft
    ⍞← (⎕UCS 10),'Final accuracy of ',⍕(⊢⌹=⍨)outs
∇
